@page "/tarefa/listar"
@rendermode InteractiveServer
@inject UsuarioServico UsuarioServico
@inject TarefaServico TarefaServico
@inject NavigationManager NavigationManager

<PageTitle>Lista de Tarefas</PageTitle>

<h3>Lista de Tarefas</h3>

@if (tarefas == null)
{
    <p>Carregando...</p>
}
else if (!tarefas.Any())
{
    <p>Nenhuma tarefa encontrada.</p>
}
else
{
@*     Titulo = tarefa.Titulo,
    Status = tarefa.Status,
    Criador = criador,
    Responsavel = responsavel,
    Prazo = tarefa.Prazo,
    Descricao = tarefa.Descricao,
    PrioridadeTarefa = tarefa.PrioridadeTarefa *@
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Titulo</th>
                <th>Status</th>
                <th>Criador</th>
                <th>Responsavel</th>
                <th>Prazo</th>
                <th>Prioridade</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tarefa in tarefas)
            {
                <tr>
                    <td>@tarefa.Id</td>
                    <td>@tarefa.Titulo</td>
                    <td>@tarefa.Status</td>
                    <td>@tarefa.Criador.Nome</td>
                    <td>@tarefa.Responsavel.Nome</td>
                    <td>@tarefa.Prazo</td>
                    <td>@tarefa.PrioridadeTarefa</td>
                    <td>
@*                         <button class="btn btn-primary" @onclick="() => NavegarParaEdicao(usuario.Id)">Editar</button>
                        <button class="btn btn-danger" @onclick="() => RemoverUsuario(usuario.Id)">Excluir</button> *@
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div>
@*     <button class="btn btn-success" @onclick="NavegarParaCriacao">Novo Usuário</button> *@
</div>

@code {
    private List<TarefaDTO>? tarefas;

    protected override async Task OnInitializedAsync()
    {
        // Carrega a lista de usuarios ao inicializar a página
        tarefas = await TarefaServico.BuscaTodos();
    }

    // private void NavegarParaCriacao()
    // {
    //     // Navega para a página de criação
    //     NavigationManager.NavigateTo("/usuario/criar");
    // }

    // private void NavegarParaEdicao(int id)
    // {
    //     // Navega para a página de edição com o ID como parâmetro
    //     NavigationManager.NavigateTo($"/usuario/editar/{id}");
    // }

    // private async Task RemoverUsuario(int id)
    // {
    //     // Deleta a tarefa e atualiza a lista
    //     await UsuarioServico.Remover(id);
    //     tarefas = await UsuarioServico.BuscaTodos();
    // }
}
