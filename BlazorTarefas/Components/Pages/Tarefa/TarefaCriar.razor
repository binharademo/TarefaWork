@page "/tarefa/criar"
@using ApiRest.DTOs
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject UsuarioServico UsuarioServico
@inject TarefaServico TarefaServico

<PageTitle>Nova Tarefa</PageTitle>

<h1>Nova Tarefa</h1>

<EditForm Model="tarefa" OnValidSubmit="SalvarTarefa" FormName="novaTarefaForm">
    <DataAnnotationsValidator />
    <div class="form-group mb-3">
        <label>Título</label>
        <InputText class="form-control" @bind-Value="tarefa.Titulo" />
        <ValidationMessage For="() => tarefa.Titulo" />
    </div>
    <div class="form-group mb-3">
        <label>Descrição</label>
        <InputTextArea class="form-control" @bind-Value="tarefa.Descricao" />
    </div>
    <div class="form-group mb-3">
        <label>Prioridade</label>
        <InputSelect class="form-control" @bind-Value="tarefa.PrioridadeTarefa">
            <option value="Baixa">Baixa</option>
            <option value="Média">Média</option>
            <option value="Alta">Alta</option>
        </InputSelect>
    </div>
    <div class="form-group mb-3">
        <label>Criador</label>       
        <InputSelect class="form-control" @bind-Value="tarefa.CriadorId">
            @foreach (var usuario in usuarios ?? Enumerable.Empty<UsuarioDTO>())
            {
                <option value="@usuario.Id">@usuario.Nome</option>
            }
        </InputSelect>
    </div>
    <div class="form-group mb-3">
        <label>Prazo</label>
        <InputDate class="form-control" @bind-Value="tarefa.Prazo" />
        <ValidationMessage For="() => tarefa.Prazo" />
    </div>
    <div class="form-group mb-3">
        <label>Responsável</label>
        <InputSelect class="form-control" @bind-Value="tarefa.ResponsavelId">
            @foreach (var usuario in usuarios ?? Enumerable.Empty<UsuarioDTO>())
            {
                <option value="@usuario.Id">@usuario.Nome</option>
            }
        </InputSelect>
    </div>
    <div class="form-check mb-3">
        <label>Status</label><br />

        <InputRadioGroup @bind-Value="tarefa.Status">
            <InputRadio Value="Tarefa.Status.ToDo" id="todo" />
            <label for="todo" class="me-3">Pendente</label>

            <InputRadio Value="Tarefa.Status.Doing" id="doing" />
            <label for="doing" class="me-3">Em andamento</label>

        </InputRadioGroup>
    </div>

    <button type="submit" class="btn btn-success">Salvar</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>

</EditForm>

@code {
    private CriarTarefaDTO tarefa = new();
    private List<UsuarioDTO>? usuarios;

    protected override async Task OnInitializedAsync()
    {
        usuarios = await UsuarioServico.BuscaTodosAsync();

        if (usuarios?.Any() == true)
        {
            // preenche os defaults para não enviar '0'
            tarefa.CriadorId = usuarios[0].Id;
            tarefa.ResponsavelId = usuarios[0].Id;
        }
    }

    private async Task SalvarTarefa()
    {
        await TarefaServico.Adicionar(tarefa);
        NavigationManager.NavigateTo("/tarefa/listar");
    }

    private void Cancelar()
        => NavigationManager.NavigateTo("/tarefa/listar");
}
