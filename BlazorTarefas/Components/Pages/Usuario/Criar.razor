@page "/usuario/criar"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject UsuarioServico UsuarioServico
@inject SetorServico SetorServico

<PageTitle>Novo Usuário</PageTitle>

<h1>Novo Usuário</h1>

<EditForm Model="usuario" OnValidSubmit="SalvarUsuario" FormName="novoUsuarioForm">
    <DataAnnotationsValidator />
    <div class="form-group mb-3">
        <label>Nome</label>
        <InputText class="form-control" @bind-Value="usuario.Nome" />
        <ValidationMessage For="() => usuario.Nome" />
    </div>
    <div class="form-group mb-3">
        <label>Senha</label>
        <InputText class="form-control" @bind-Value="usuario.Senha" />
        <ValidationMessage For="() => usuario.Senha" />
    </div>
    <div class="form-group mb-3">
        <label>Função</label>
        <InputSelect class="form-control" @bind-Value="usuario.FuncaoUsuario">
            <option value="Dev">Dev</option>
            <option value="Analista">Analista</option>
            <option value="Marketing">Marketing</option>
        </InputSelect>
    </div>
    <div class="form-group mb-3">
        <label>Setor</label>
        <InputSelect class="form-control" @bind-Value="usuario.SetorUsuarioId">
            <option value="">Selecione...</option>
            @foreach (var setor in setores)
            {
                <option value="@setor.Id">@setor.Nome</option>
            }
        </InputSelect>
        <ValidationMessage For="() => usuario.SetorUsuarioId" />
    </div>
    <button type="submit" class="btn btn-success" >Salvar</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>

</EditForm>

@code {
    private CriarUsuarioDTO usuario = new();
    private List<SetorDTO> setores = new();

    protected override async Task OnInitializedAsync()
    {
        setores = await SetorServico.BuscaTodos();
        setores = setores.Where(s => s.Status).ToList();

    }

    private void SalvarUsuario()
    {
        UsuarioServico.AdicionarAsync(usuario);
        NavigationManager.NavigateTo("/usuario/listar");
    }

    private void Cancelar()
    {
        NavigationManager.NavigateTo("/usuario/listar");
    }
}
