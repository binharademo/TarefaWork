@page "/setor/editar/{id:int}"
@rendermode InteractiveServer
@inject SetorServico SetorServico
@inject NavigationManager NavigationManager

<PageTitle>Editar Setor</PageTitle>

<h3>Editar</h3>

@if (setor == null)
{
    <p>Carregando...</p>
}
else
{
    <EditForm Model="setorDTO" OnValidSubmit="SalvarSetor" FormName="editarSetorForm">
        <DataAnnotationsValidator />
        <div class="form-group mb-3">
            <label>Nome</label>
            <InputText class="form-control" @bind-Value="setorDTO.Nome" />
            <ValidationMessage For="() => setorDTO.Nome" />
        </div>
        <div class="form-group mb-3">
            <label>Status</label>
            <InputRadioGroup @bind-Value="setorDTO.Status">
                <div class="form-check">
                    <InputRadio class="form-check-input" Value="true" />
                    <label class="form-check-label">Ativo</label>
                </div>
                <div class="form-check">
                    <InputRadio class="form-check-input" Value="false" />
                    <label class="form-check-label">Inativo</label>
                </div>
            </InputRadioGroup>
            <ValidationMessage For="() => setorDTO.Status" />
        </div>
        <button type="submit" class="btn btn-success">Salvar</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
    </EditForm>
}


@code {
    [Parameter]
    public int Id { get; set; }

    private SetorDTO setor = new();
    private AlterarSetorDTO setorDTO = new();

    protected override async Task OnInitializedAsync()
    {
        // Carrega o setor pelo ID
        setor = await SetorServico.BuscaPorId(Id);

        if (setor != null)
        {
            // Preenche os dados do DTO usado no formulário
            setorDTO = new AlterarSetorDTO
                {
                    Id = setor.Id, 
                    Nome = setor.Nome,
                    Status = setor.Status,
                    EmpresaId = setor.Empresa.Id
                };

            // DEBUG: Adicione estas linhas para verificar
            Console.WriteLine($"Setor carregado - Status: {setor.Status}");
            Console.WriteLine($"DTO criado - Status: {setorDTO.Status}");
        }
    }

    private async Task SalvarSetor()
    {
        // DEBUG: Verifique o que está sendo enviado
        Console.WriteLine($"Enviando - Nome: {setorDTO.Nome}, Status: {setorDTO.Status}, EmpresaId: {setorDTO.EmpresaId}");

        var resultado = await SetorServico.Atualizar(Id, setorDTO);
        if (resultado)
        {
            NavigationManager.NavigateTo("/setor/listar");
        }
        else
        {
            NavigationManager.NavigateTo("/erro");
        }
    }

    private void Cancelar()
    {
        NavigationManager.NavigateTo("/setor/listar");
    }
}


