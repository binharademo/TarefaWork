@page "/tarefa"
@page "/tarefa/lista"
@using BlazorWebAssembly.Modelos
@inject HttpClient Http

<PageTitle>Lista de Tarefas</PageTitle>

<h3>Lista de Tarefas</h3>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
	<MudGrid>
		<MudItem xs="6">
			<MudText Typo="Typo.h4">
				<MudIcon Icon="@Icons.Material.Filled.CheckBox" /> Gerenciador de Tarefas
			</MudText>
		</MudItem>
		<MudItem xs="6" Class="d-flex justify-end">
			<MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add"
					   Size="Size.Large" OnClick="() => NavegarParaCriacao()">
				Cadastrar Nova Tarefa
			</MudButton>
		</MudItem>
	</MudGrid>

	<MudPaper Class="pa-4 mt-4" Elevation="3">
		<MudText Typo="Typo.h5" Class="mb-4">
			<MudIcon Icon="@Icons.Material.Filled.List" /> Lista de Tarefas
		</MudText>

		@if (tarefas == null)
		{
			<MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
			<MudText Align="Align.Center">Carregando...</MudText>
		}
		else if (!tarefas.Any())
		{
			<MudAlert Severity="Severity.Info" Class="my-4">
				Nenhuma tarefa cadastrada. Clique em "Cadastrar Nova Tarefa" para começar.
			</MudAlert>
		}
		else
		{
			<MudTable Items="@tarefas" Hover="true" Breakpoint="Breakpoint.Sm">
				<HeaderContent>
					<MudTh>ID</MudTh>
					<MudTh>Título</MudTh>
					<MudTh>Prioridade</MudTh>
					<MudTh>Status</MudTh>
					<MudTh>Criador</MudTh>
					<MudTh>Responsável</MudTh>
					<MudTh>Prazo</MudTh>
					<MudTh>Ações</MudTh>
				</HeaderContent>
				<RowTemplate>
					<MudTd DataLabel="ID">@context.Id</MudTd>
					<MudTd DataLabel="Título">@context.Titulo</MudTd>
					<MudTd DataLabel="Prioridade">
						<MudChip T="string" Size="Size.Small"
								 Icon="@prioridades.First(p => p.Id == context.PrioridadeTarefa).Icone"
								 Color="@prioridades.First(p => p.Id == context.PrioridadeTarefa).Cor">
							@prioridades.First(p => p.Id == context.PrioridadeTarefa).Nome
						</MudChip>
					</MudTd>
					<MudTd DataLabel="Status">
						<MudChip T="string" Size="Size.Small"
								 Icon="@statusList.First(p => p.Id == context.Status).Icone"
								 Color="@statusList.First(p => p.Id == context.Status).Cor">
							@statusList.First(p => p.Id == context.Status).Nome
						</MudChip>
					</MudTd>
					<MudTd DataLabel="Criador">@(usuarios?.FirstOrDefault(u => u.Id == context.CriadorId)?.Nome ?? "Não Encontrado")</MudTd>
					<MudTd DataLabel="Responsável">@(usuarios?.FirstOrDefault(u => u.Id == context.ResponsavelId)?.Nome ?? "Não Encontrado")</MudTd>
					<MudTd DataLabel="Prazo">@context.Prazo.ToShortDateString()</MudTd>					
					<MudTd>
						<MudIconButton Icon="@Icons.Material.Filled.Edit"
									   Color="Color.Primary"
									   OnClick="@(() => NavegarParaEdicao(context.Id))" />
					</MudTd>
				</RowTemplate>
			</MudTable>
		}
	</MudPaper>
</MudContainer>

@code {
	[Inject]
	public UsuarioServico usuarioServico { get; set; }
	[Inject]
	public TarefaServico tarefaServico { get; set; }

	private List<TarefaStatus> statusList = TarefaStatus.Carregar();
	private List<TarefaPrioridade> prioridades = TarefaPrioridade.Carregar();
	private List<UsuarioDTO>? usuarios;
	private List<TarefaDTO>? tarefas;

	protected override async Task OnInitializedAsync()
	{
		usuarios = await usuarioServico.Lista();
		tarefas = await tarefaServico.Lista();
	}

	private void NavegarParaCriacao()
	{
		NavigationManager.NavigateTo("/tarefa/criar");
	}

	private void NavegarParaEdicao(int id)
	{
		NavigationManager.NavigateTo($"/tarefa/editar/{id}?backTo=tarefa/lista");
	}

}
