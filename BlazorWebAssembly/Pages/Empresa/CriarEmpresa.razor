@page "/empresa/criar"
@using Microsoft.AspNetCore.WebUtilities
@using System.ComponentModel.DataAnnotations
@using System.Text.RegularExpressions
@inject ISnackbar Snackbar
@inject EmpresaServico empresaServico

<PageTitle>Nova Empresa</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium" Class="pa-4">
	<MudText Typo="Typo.h4">
		<MudIcon Icon="@Icons.Material.Filled.Groups" /> Gerenciador de Empresas
	</MudText>

	<MudPaper Class="pa-4 mt-4" Elevation="3">
		<MudText Typo="Typo.h5" Class="mb-4">
			<MudIcon Icon="@Icons.Material.Filled.AddCircle" /> Nova Empresa
		</MudText>

		<MudForm Model="empresa" @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
			<MudGrid>
				<MudItem xs="12">
					<MudTextField Label="Nome" @bind-Value="empresa.Nome" Required="true"
								  RequiredError="Nome é obrigatório" />
				</MudItem>
				<MudItem xs="12">
					<MudTextField Label="CNPJ" @bind-Value="empresa.Cnpj" Required="true"
								  RequiredError="CNPJ é obrigatório"
								  Mask="@(new PatternMask("00.000.000/0000-00"))" />
				</MudItem>

				<MudItem xs="12" Class="d-flex gap-4 mt-4 justify-content-end">
					<MudButton Variant="Variant.Outlined" Color="Color.Secondary"
							   OnClick="Cancelar">Cancelar</MudButton>
					<MudButton Variant="Variant.Filled" Color="Color.Primary"
							   OnClick="SalvarEmpresa">Salvar</MudButton>
				</MudItem>
			</MudGrid>
		</MudForm>
	</MudPaper>
</MudContainer>

@code {
	private EmpresaDTO empresa = new();
	private bool success;
	private string[] errors = { };
	private MudForm? form;

	private async Task SalvarEmpresa()
	{
		try
		{
			if (form is null) return;

			await form.Validate();
			if (!success)
				return;

			var erro = await empresaServico.Salva(empresa.Id, empresa);
			if (!string.IsNullOrWhiteSpace(erro))
			{
				Snackbar.Add($"Erro ao salvar setor: {erro}", Severity.Error);
				Console.WriteLine($"Erro ao salvar setor: {erro}");
				return;
			}

			NavigationManager.NavigateTo("/empresa/lista");
		}
		catch (Exception ex)
		{
			Snackbar.Add($"Erro ao salvar empresa: {ex.Message}", Severity.Error);
			Console.WriteLine($"Erro ao salvar empresa: {ex.Message}");
			if (ex.InnerException != null)
				Console.WriteLine($"Inner exception: {ex.InnerException.Message}");
		}
	}

	private void Cancelar()
		=> NavigationManager.NavigateTo("/empresa/lista");
}